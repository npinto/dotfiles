#source-file ~/.tmux.conf.default

# Change prefix key to Ctrl+a
#unbind C-b
#set -g prefix C-a

#bind a send-prefix
bind b send-prefix

# Last active window
unbind l
bind C-a last-window

# Previous/Next window
#unbind l
#bind d previous-window
#bind Space next-window

# Copy mode
unbind [
bind [ copy-mode
bind ] paste-buffer

# Use Vi mode
setw -g mode-keys vi
#set-option -g status-keys vi
bind-key P paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'V' rectangle-toggle

# buffer
#bind Space choose-buffer

# Make mouse useful
bind m run "if [[ `tmux show-option -w | grep mode-mouse.*on` ]]; then toggle=off; else toggle=on; fi; tmux display-message \"mouse tmux: \$toggle\"; tmux set-option -w mode-mouse \$toggle &> /dev/null; for cmd in mouse-select-pane mouse-resize-pane mouse-select-window; do tmux set-option -g \$cmd \$toggle &> /dev/null; done;"
#bind m display-message \"mouse tmux: \$toggle\"; tmux set-option -w mode-mouse \$toggle &> /dev/null; for cmd in mouse-select-pane mouse-resize-pane mouse-select-window; do tmux set-option -g \$cmd \$toggle &> /dev/null; done;"
#bind m set -g mouse-select-pane \; set -g mouse-resize-pane \; set -g mouse-select-window \; set -g mode-mouse off
#bind m set -g mouse-select-pane \; set -g mouse-resize-pane \; set -g mouse-select-window
# Toggle mouse on with ^B m
#bind m \
#set -g mode-mouse on \;\
#set -g mouse-resize-pane on \;\
#set -g mouse-select-pane on \;\
#set -g mouse-select-window on \;\
#display 'Mouse: ON'

#!/bin/:
# Toggle mouse off with ^B M
#bind M \
#set -g mode-mouse off \;\
#set -g mouse-resize-pane off \;\
#set -g mouse-select-pane off \;\
#set -g mouse-select-window off \;\
#display 'Mouse: OFF'


#unbind Z
#bind Z \
#new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
#swap-pane -s tmux-zoom.0 \;\
#select-window -t tmux-zoom
#
#unbind z
#bind z \
#last-window \;\
#swap-pane -s tmux-zoom.0 \;\
#kill-window -t tmux-zoom

# zoom
#unbind ^M
#bind ^M new-window -d -n zoom 'tmux-zoom'
bind C-k run "tmux-zoom.sh"


#if "[[ `tmux -V` == *1.9* ]]" 'unbind s; bind s split-window -v -c "#{pane_current_path}"'
#if "[[ `tmux -V` == *1.9* ]]" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
#if "[[ `tmux -V` == *1.9* ]]" 'unbind S; bind S split-window -v -p 20 -c "#{pane_current_path}"'
#if "[[ `tmux -V` == *1.9* ]]" 'unbind V; bind V split-window -h -p 33 -c "#{pane_current_path}"'

# new-window with 'c'
#unbind c; bind c new-window -c "#{pane_current_path}"

# More straight forward key bindings for splitting
unbind %
bind - split-window -v -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}"
unbind '"'
bind | split-window -h -c "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}"
bind h split-window -h -c "#{pane_current_path}"

# History
set -g history-limit 100000

# Pane
#unbind o
#bind C-s down-pane

# Terminal emulator window title
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'

# Status Bar
set -g status-bg black
set -g status-fg white
set -g status-interval 15
set -g status-left-length 50
set -g status-left '#[fg=green,bold][#H:#S]#[default]'
set -g status-right '#[fg=green][#[fg=yellow] #(w | head -n1 | cut -d " " -f 13-15)#[default] #[fg=green]]#[fg=cyan,bold][ %m/%d %H:%M ]#[default]'

# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Notifying if other windows has activities
#setw -g monitor-activity on
#set -g visual-activity on

# Highlighting the active window in status bar
setw -g window-status-current-bg black
setw -g window-status-current-fg red

# Color
#set -g default-terminal "screen-256color"

# Clock
setw -g clock-mode-colour green
setw -g clock-mode-style 24

# Swap window to position 0
bind-key T swap-window -t 0

# Swap/move windows
bind-key < command-prompt -p index "run-shell '~/.utils/tmux-number %%'"

# source file
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Allows for faster key repetition
#set -s escape-time 0

#bind -T root F12  \
  #set prefix None \;\
  #set key-table off \;\
  #set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
  #set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
  #set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  #if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  #refresh-client -S \;\

#bind -T off F12 \
  #set -u prefix \;\
  #set -u key-table \;\
  #set -u status-style \;\
  #set -u window-status-current-style \;\
  #set -u window-status-current-format \;\
  #refresh-client -S

#wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

#set -g status-right "$wg_is_keys_off #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host"
